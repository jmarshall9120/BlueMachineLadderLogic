// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with Built-In Types and User Add-Ons;
// use Element names (no NickNames); rung/address annotations;
// <TAB> parameter delimiter; 
// Write/overwrite file C:\Users\jmarshall\source\BlueMachinePLC\BlueMachine_EXPORT_DMD.txt

PLC H2-DM1E

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
d33eaf713dd3d85dce671cc8a6e55f4f7604461a0a8d7a1572ec4d075ab597130c04a196ce5fe906
cbee25045f952b6b134c7bdc60609926e731cb354ee0040bb60e74985e3c7f7c3ca8cfcfd0dc7e60
9bc73d26599e97a20105b22476ca61ccbd4c8e52fd71b00a1b6d0f327c00a450330d43fed5792462
e93ef51831e0f3649ada31c925786a0db3c2b60f01bdca94687926154d16cc10b128ad78b592259c
61ebcecf702f19c47977654cecbb8dc113eb087eb26117dd980bd93752dcb53b304194716beb11f1
184379fa482c923508eff597c76436c3ef937cb5388f30416a6434806f53b802efbbf95b305db3f1
1433f1d74f832b431381bb321feb3f6968d48f5c1442e4a36ab5445cae2fdddd8ac4028bab55c5b6
8ae3b088f7f2e233f673ca427c5770f4685d14bfb38cd7c9e345b821ace4f5aa969cfb8c82f82677
280b86233a9a7fcb741239c7a4b8fea9651dbb4a8363614fce269e052f3de94012d54218debc0bcb
b1cdebb8c738ca351b7e7826f5e89e476c6822b7214b697ad661743d232234d6ef3d43e7b14125ea
5e6d67d9334c58387a57683aae158c079c6752efc0ad6cccc8a8e9ec47ea8eb210872f9b296aee63
e1f935a87fd16d6542ca67946b52c15b612807026fa2ba522e19e5d88f2c589774c35a8eae02f25e
70ccfb7a59220c63b18fb93e815f819e75fd58786ad1b1eeaeac1a3a081a576f71c0a2e252f1b089
1728205700d0ec6f7150de6e470f0315c9c6ff1144f5965c73d49077f1dc7cb72e91f3924cadcda6
1a3d83263e1faa14fcdfa2b21129d0bf9d14aaf4b6870c5139e85dba81e6f64278243011579ffab7
db08a101e74f54f9c77531113fd9ff652e1c569768df234b551ef17b15780624beae7543f9546522
9b1b99c51030bb24438fcf6d9da348ba21276f71ef14d17f6e15b62f4e1ae2a203d4970e6032d733
898706a7222d01f04b504e5e85098df285d3bbf3cc3f61f93e702485fc849ec78b44a52b04113a0a
7a3a79b49f2690202c454a405831c1d8230dd09878d7974ec9a1cc6b175e338c276c3be976266901
7c53d64566efcbab62ad513a4af79e6295b53a8b6ea968a707ccc1d1db1721197be9d4199e8305da
2ebf754d4b1855340184d902370e07d2aadfe26ae0c071ee88d612905da0bff00fc742092d6efd6f
59d74548c626f2cca83f31ac0677925d4d5878abc993d593cef036a083244d1947869ee7e20ff538
2fc62933b508d2f71eca73e1a5ad0595edf2eaae3fb90d87ae3b12077792d7539d423d43e5d0c299
a855571968d5c0b3affb5ff1dd073c12dc29a50d1462bc39bd6789b49af7968514870c70eb3b932a
e714f1980f7094ca28d1061638444673f42912e2a9d9f4e2a3ae5a5211feecd1ed0584c6f4f2e027
b0936a36f9232565a88c0c14ae705f322ff8b691a89e77a36767eb80e2d71328ff2957b8d7e1da4f
c7fc44e85e9a1bacaf0d27913c2f7e706af8aa48ea936e10e4f7218edc62548b0ba73947a07b900f
ba16fb6fd6d72be8976549c6fe0028d9ac824a41505eb27489c817f9cb122363eb66636cfd8931b8
78a1e6af553dd6c2402b32ecfeb6f5fa9effd36ab34aecd354fe0f9d159c214180526aa4b326d43a
bf8e52369cf9478dc53fe67d9999e3fb896cbdd5fc5aee2b29c4f257d4c857a46263690030410c31
a0aac2e8bc5768d311cf6a69cf4fbe86bdf2ba56e7a3be3d8fb38eeea5782b164ad5bd935b6b0177
0c378d6e78eaf5d137799967bc18452164640e2760a3d5ec56b5a3011e826812cec6f3b3d3ebde63
bc155291e7de648791da9f7665dc6f85e0f4d4992fb4e63f6d3e8240a3b9cde7d9b3d8afada72f53
fde28fc095b97afdd0a6b5ea1029747a61d7c1715e1e7bae5abec1ab41fe9c34cbbb72dde01d2989
e63159906e2d3a17b18f2bb1fd4bc9c57a66f755c0ec2ef0ef86608de45e5f37f5543024c71dc910
62adb86d21bb819c0646ba3c1cbf021a43f031ab7fbe290063b00404a080e0315d577f124d1e91b6
6b5c4b1fe3c4e6e10572f5affdc3d562ca4a6b85da7f6eb35f6fd252b0dabb76f5ee1be59eacde1a
7a71ddd22e166e596928881d64713f183615b040b746d969444bf29b186720b4f2308571481d46d7
ebfe6ada27b33ba5ccef45861f3f137c1181cd9b2c73a0a68cab6df43c06d32b6f05bfbec6cc92cb
d396f6126429efaca949d411da6936edc9e5306f8618e797b517bc5f4bb4d306502f3f2361e61ae0
08e86e268a5c663a97e9a8fd3714e80dab09f03d310cc49e89ec359933727fb7888652895432265b
5e353f3eb63cb456231e4130c7f6021b58d2dcbacb7cf56042ce2e570ee6eb9cd3a9505837e45f21
8acd806bea74d7a48d3bf910d9a6377d40b65db4c91442362677a610c1d8eaec4f8ee5ef9ea96ed8
7c02a5a76114a9645652d5e831e96f87ba29672f24ed7aa6dbfb9421aa0af47be89ab248fef4581e
ebe8c18ecf17deaa0a3a49467e95706581e6ef9f511326e21cf2795837dbf858a6003b13a5ae780d
aef6ddb0dcdf1661e18e984e2cb69eb9a705598aa5a4415d5fd7f7a9bb9bae5561676108e68f8ca5
2b784ed65d4329f718449a9ae9be6b549ed057f2de27a2f4a5d3d7a352f7e5e280ddd447fdb3cdf9
c13318e8f4d287d56530f69f38e137b769258bd8d723a765c2a7ad9ab2e2edd3577f5e6e60ce0cb7
55a890c88129817c6195d4daf3ba493718a36d61640cd01b003cf1b2e7d763e3bbc8a0b746d4cb81
e525c57515e9ae3a02fceccf4fac7b3675cf36dd6a8158776124fc94b60b51111f6f6910790d2977
199e0ea6611c8c0a1accf247cc0fc92f2d38a558db92a6bc53b61111943c906010d5d2ce649569d5
613d77bc77a93177c6a6d0f4c6db965f731f09a21ba33c4f0db63f0a4ca3cdbe8bf8793d1a042c46
56be10d9836b619a6949dd28f7a52eeb8f0ef1c2d5f8eb6dd338e914aceab17d8e16796e59c1f8f5
17243643d2177812524f491613ef5d511b29812383bff0f32d0c44a3ccda9beb54fef8579a738eff
16b7253f3aad46e0ec20059aa652543efe47db10c94bb08b72ed639e7529f422931985e7ac6fdf11
14f4c04e07731d930e6a0310c19c64a7c4a70e1aa2fcaf344bf14955a6726c205b6c4bb1ad194686
44118caabb715fee0af8ead03f62aa552d3263c92bb553033dc2b42e981a26a065b01acd5992a87a
e43a213fa6af35116eda867fbcdecb03207785ff7ee2fe023c88a9f255d471220abec0276a9c89ea
32c21cb64cdf8a48a18237981a2127c117ca9536e9d6a4b6f4c0300f204308cb5b41ca0c4e1168b5
e7645b7d38329995ef3c3deb7eabe4545b80a77ca64f9fd6893006291bb7512e44de1e3d3985b023
5d82a2576fa9225225aac546b1718b399d900a2e51afd4a6ee1b70930882df56e599c9b58984da80
581f53d00aaad70a74b8aaeef8a7bf4713b23d503f3e913ac8f638cb84dc58447e9cfaafd556292e
cea913b349aeab819a2ac0000e3b2b4e72166e1445b193033c3b52cc9602f2f6bd25917eca6f39f2
43ab7c561e3bacd34a09638697ada028852e8bfac93c82c50ff39a08143d3080a7344874dab680cf
90edb88c88abd370381d81a2cc2484ccb2a56f188ab5c2ab9d3c57f7c548e0726e47fa4ab5df5c30
68478a969c8f6b9246c48b7d67ed75b773ba42f48fd17a9806f2328cf5bac405e9f60f0f66cd5774
5ab345e2c880a52e652bc2622a948250deb3dcad86cb3b05cb387961115887733168c5bf0fa9d5db
253c0cd5a75bad7f00bd2198d35e99530733e01cdbb69528c4040fce87c698aeec0f3abdb0e9bcf2
5b7ca2f8616086c5cf48c375f62810e0c2ab959f5e3156db8b4801462a5b197dfe818662850c68b0
6671ad6f8df24fd36229d9cf508c8fe9d6f4b36b4a83c0358bcc6844f59c7f063d4ae87f033f21cf
6fda7aa6ff447b50b58c4bc18929b3b66697b6cf45efe27442cac37b10a3feb6e320692e4230b284
5250d931c176d62c4b756b86c91c48e7a28fe458b5829db0d60b5341e6979461df987c5029bba78e
43f25540eb70b3acac71778778b0498b4862b17cd625873b780643550f78861b371e17e26afc75f9
815e6325ec3e68d2e603a47b0e8aa2c11de3e9f68c064488f563263d6ec07da0cf3c876970308273
95d75c219281edfcf8a03fc6fffad635fb0af83543d68d0ff737159cb40d027963e298110aa8b477
026a40f3e8302e60d68632fc4d645940f215f4bbfb77484aa23a838688b1204561c1b9f6eb460c16
8a21a890ab9a4bf90e62f78a273ba5da6892b2fad86efd4780d563cf495d6a7cf7e7b9dd7386c725
1a130ae93be29dd1c21621299815ef7b0f6665d848885e86fac41af3834fed07e0dbf11cdea13b19
1ef006473d58505e0dc9a4c98826c06ede20930653d63a5653940956f89630226da8c620fdf16471
5a68b3dc88dada5291b71497743b97cbb781f263e5e828d840a934b43bef3c72f19972d8bf896512
ce2b7334150308695c3f31978f51fcea81b61ba49a696ae9a2601b7089e192f063483140155e27ae
fa0f83b6204dcbf906347c3b81b904e8f871a62fa0c662b899afcbfcd30eac153e31d27e67cc49ad
060aab81048fad9bbe67e68fb3f34a451985a006b4e0540cdce2dc7c6cfe047068fe665103a1fcfb
9cc0b2ede0b76ef59846bfabb36078ca8d5fd270c83da4f77315aa8a5e71f68748aa373f4e4d729b
58e6a4bb6906a1e8430f7bd76727e63488754de2c24c1bb86933e4df0bc8d52fd5bd9b29e3a0ac82
c142fa0b0846d89adf58c05069c5f32601316580bcca57e6952f5951c21ed833afab2976d3d44e14
3df62566ee4fb54c6522eb37f1412aa375a2652c10fdc753451e96f6c4ef2a1734001ea1ca439587
3f2558867f5910494aa4849014908c87b0de1ef9b24d8bcfca692c6bcfa165d58034ab6aa0e01714
abb19c9f122681b33cfac62ae11f8ebacba0ec1fc24c876440f5f060c8f7fb6ef21515f2625b8af8
e5812169c362adaeacf5eb42c9123fa46c0e7af5bc84ce0a48e52c261e1d7430b877f781207e71fd
cfb98f6f4639b6765d1b28d7f6e0bb4a0b8650a48ada5087946086cf9e5c9559c1b17051b23fcabe
9dc96fdd0697259d834069c262ab2e5a4dbc036fafdcdc543c8c2c763a9c3480fbedb2aae48ad686
6bf26974d5236d058d421f7cc4b9337b5d7b52bbc3119b5fb33679a7474ab33b273f6b2c1f1c157e
fbe9cb7f0cd78d4be00c1cba33d012269c850937c5c72337d640d4011d1a23fd81f5d4700172f833
c20ee84ffb98e85ae17d31e33339d4a107522341728a2a724c2f2b389e99f4d6ec14ddefa849d268
bd590901a366119741c6640cd806f46330469aef4f85a4a50b8ede04c8c4523f7a7e19ce27dd3ed4
64e7bbbe4ece342b48e776f36f4c9e9388ca1310306e259db3d87c781210d422ec78f7be2b2f2f4d
6a61740a0192156abb79c4510198f4506378194794336b6fb1311a25310e4c6a35a7824ca96e13b2
6e66caa0820d72f2820d2be4fdae8cb4f0eb90059137f82bf637e2b21e6655a506a4d529fd3dea03
d196034f29b7254b0d9a8ce67edb26d3309d40fdf11fb1bbc366f37dd3422bd74fc0a723d06cf89f
096024fe6546fb35c63637c66e1a92f9dc2dbd28937b40713b8c9f6c95a49702846c168b352166c3
cdc18a5219bcbcb14a11328966d477419f92396c915d8407ded7ef33dde4773614546ba2c9fd0c0f
b16a409474500d4b9863f529d76644bb52b16968cd93e6055f57dd508e9848622691f711278f0da1
917b4635d94c4b0bed375749c2f406e01e28413a1c510767e2c29ff27f319368a5015f29ccc91179
b453eca879fc2a90991dd0027f515200eab8ba1bd4795f077530434b56eed92599dfa63c38e77a6d
b519a1af592f9e9719d6880d25569f27e1aa42a375126c132e256ed512eaaafb1bccb24c1521edd2
3a0eb4d343f98fc68f0cd9629a9627e5e26dc6b746e13ea8aa111e69c0e5fe51e715f4031f31c7aa
061fd3b5e10c95085379e92c0d18e556115007a3083f7dd6d1f5b029358a8b0828bae7f7181b58bb
7e965377e54b80d5f7c6da903c3b12999edcb7623e06c3a932e3a8889bae45030678ba04be0d49b0
a81dd0ab443d9a543c110d21712309c49a9648cc7ec34e190732f9f1d41e584059c6b0b6fc152187
33e87826507558646aa0e64ddb350ccda325868c202638aad34c660bbd2102da87832a6ad39a1851
9f0346db628d46420d98b45185991de4c8dfd1ac6f5910b5c3b859daed06fae32bd5c9e4c59bb00e
add65c74f80d272a0343885a05c2a0f86010388338924b449c09c05c19ca63dce2e7a8bd8e878b18
a1d06ee92af6d6fade122910999eb41cca7b2a05eb3fc167736e9ed109acd0262b816f7a9827159b
e6a3be7f71114aa685f060f16ba02333cd0baee4fce918812d4936233ca285c20dfd9dab91e808b2
2ab549cb08cbcb1c69b9aff717cdd7df9185400cdc79f76f0288905cf0e9fb0276cf83e2d9831b23
9e1408e3df5349f833f0f095e735c8317058805370d3042e6de22a26765e1ad4488db6975a6d867a
39532a0d50e06f18f3f6686df1a2c75e5033bbc12cc2d45a4f0fa5ce7f6fe2542e1873e2ce63d009
20e02fa667ad181900067a792858134b7b74b8236ee728fbd50484a313d506edf19c83db5293fc61
8ed4fd248e68fcd6b9bf1f6fd193b12f4aae9c23528c3b0d78cff8cd5112107bcc21d9d38aff7750
97aba39d21915e4f00b7f3709c5037b3bfc8077579905e2c396496121c2465be76eee2fe4bd48f07
1290b61e532e45cf376f14fe0f6efc3b8a1982094dd61c9611caee16cc241c04e7aa2e969706c155
7ee1d5416dc6b1b74a33c3b783017b4429a5a5751c956ea1c5364106a0d9e2b17c3b2568a2aa6b8e
1c06382c2a4839bb47bbc762054cedb55ccdda40cd60ceae2f16e9dc955355a05030dbae28f7c3b3
d9694d35bc27107346c34149cdaaff900fd24e356c7f55e700261e5c6bb1bc4e47d451bac7d6f868
03e9bfcf4eef02e68ddc55a073ecbe4fcbaad025f849087d1702fa4efa9e288b40934e39770dd3dc
c20fccde157ecbba8e532625c81b3ac2d10d542e29d103bf136ad74ea83f206084ddd7ebe8afdfcd
9a1316de13728c3036fd48e7eaf3f40d68b1aec65056aa1577d1b06b6697641085c7af6bc0132ecf
7d3026241a82b89fb65df023ecbbe3e3ede87ec7a0d4de803ab7ac6dcc612506a966767c16aa8e88
64cc9347f6bcccbc24991ef212d1f0f03c78c5d8c2e63b31aa137cc1f76f332f81971e43a2a203b8
1ec560814df7df34425ee66914d789d1a60d1b381403ef2bc01e28bb08149fcafca2f81fe7897aba
392a1bc2361cc39ae68ec3642d91c4f263eac02e6178be9efbdaf301bf7f86b29ece854a38bac343
c0cccff3d707994078c04e0b738a23a9fc19d98d8baa2667977fbbc89f465bcd2f8774255fba9104
5e237dc20828e8f96c6cadbdce991050c14a2d3e6791a9218c16f3d3db2208e29ac7d9be5eb47504
6edc4b5d35ff24e34a2764c9b638faa273a4b26639a3506b8e7c6046582b84aa9daf84bc69e52ef5
329bf6b51863ed2f77a6716733ce808b040dd3c91baf0a55172f92d9d00e682f7f50d13cde32e99e
50a67e43ea4b66fc02b6bf1a74b9b533878de435109a477f0f15fca37c1fe7728a6fb44f5572852b
a9918ce028980a05a43a3e5b3e7e5f2c04cd17d65dff68cc4b40bf8f8c60c77257882cd74a224d18
f36bf7d33964c152e1963beb7985ed0e08451518a49875e6404499bdbb32dd035d5c6efe34d837ba
2e4715dea8f1616677dfcd60305680f464286b1f4290477644e33ffa19ab3ce66470a42f411c19c3
33eee9ba5dd24086c4724e12678fc83be5593b10eab0f1b50cfeb0e567b519e141189c71a5254d9c
7ca872920c3bdfc64f85334ebcba6c79033d9c53642ef3469df30d548e6ced8cc07169eb91b8800a
990dab8939c60a2c04b53fd37c92ea294455c581873c20c76d766a7e65c7fa35e91a59b351ac7ea2
4aebaa0f8c8c3a518d4934c2838e02fbc005e4c074f76d29b5993224ef40b3ce68010cca7734d8cc
121e339421850c2312ecfe1a2674ef8b8828330e28f17c2b5db200a3df309595d9680d6fed201784
c35e3ddcf8c9d15d18a063e344300d27dfe8f29e051ee6e650f6189d4c61cb60d6d1152c64f4a4c9
d3fcd92efb4fd893e4459e61d2884c7da2109a5134e68d89d46f6f328b93f9caeb14bed308dede58
dfc4317a3fde46f189f6621f096127c22e927a41181cca422d98a32d71547cf4f19103c33e14daa1
c522e2978217c70c01256d22001bd670b4c48aabea937158a452efecbb08f20901a15cbce0851c57
68d03fd76beaaea001f03e6cb8510ccd74ebfe4c572ea48f419a77881be3ebd70e7eb2257382a27d
10a0a3dbdc03918834cc6a5325a9431247d09e0d27b7c2f82642b9e60411aa6dcbbd0e62cff36da3
3c7581b01fab5ebd4943bb90d9e631ee3e77e1b507ff788b988c55b7f3c039ce1b7df9a8fb84a289
d157a4572dc9e1ed049e200c3469ef49fa7333d964c8ca54fa8f68aa8e09777a3b49c16e81667952
02abc8863acb8297ebf494b10e99c19aa5ca29e1dd152602be2e0fc20e627b3e9582123071014ab3
4aee3ed667fcaf8b35a35392a4e44bcf73cedda2a43c3ee066b7074fc9f8de8538b8ebbd0bfcbbc2
21b14329fcd254912e81940d27f7d9cf5ac13a496f5369ccca4ebae8aba64819f83f1055c26c90a9
d2530235afa9b36eb27333043196c52c846967ad60f4fbd91c88b4f3816750b355fb4932c0ed9257
08ae8dddc40795c59a5d8b9e593e6fe87d4a10ab4b5c9b4ffc543f879ada8e68c6106663ab718bd1
3b4828cacd96d24b4e7897927b812bb1461130b9785cb3f882f83bbf20538622025e34f379d2b697
42f8d471e157b3b0b721030347819efba4f1c21c19f6354df867cf878597b04ddda3ce055ceb08fc
1833d4baf83aa8d6c2cceb9ad153f077460ff1b51ccad55e01c47451294ebe9c1b340b20586e550e
14c1707a1bc61f5632fd9c0aefb06ca37da4f91ea46f576b7f3f5ea06db81906ef2d4bad9ea26c84
480952a1dc5f364d4cbb30b9350e2e7656a8d67ad72024d3e339bfad224ce593a80dad966324b653
a75f8a58523e0f9a5a749940e2197a3db9dbdccbb6246e091c9e9545f7d7a2fba78d9a3799fc8ee1
8073c31879ae0d8aa5e8a8f8276cc644d6758862432bda9075d3a3d19c6a6fee2f3182658cabe13f
ea6ace4584878641b0b71818f134756ef684dee3ff0b13c6116dac18ac6caff83abd9205f6e0e437
9deae24b98a013bdda81346f13f8375d6017e215942c8713db2c0ec2a10d679bd68ae494eb8cc695
35a611c0c1f388e83d69c627bbf482b20d351a746fcba17986a458cb1479ad6e2192b9acd12b72ad
5aab37092624e38d5f3c78768307ea8d1c027910ce02cca88b260b0c54e4fe810e6c337f3827dc49
c7af22ab60e0f4046b02d1a54905425dbda18b84855d6d7500e3fb6876deb6e7741a7bcf8d4dd7df
d9748c34e6c64798f70d916d77cfc477c6e5976b2afc0ae25c5fb6a463bca259451c1577e7c78835
0fcf4d5899023880bf818e484fe5f415e3e0c8d5fea88626f4ed6c08d2c428325f0bcc3d2164ea31
985bd015c0bae9654afa413ca8d3a838fa38fd51fc7821c9ddb0cde8beaded5be0d95f2f038a4107
9233625306f5bc7c0c815b9e7a4d3e18fd2d7006d5aec02fa78b3610ea06dc44bb14bcd15ac25690
004b8e8c7736853e9e6458a098c6702367c7257e5b89a667ceb19abd9b1c497d730ce3ef6d2de0c7
9d0f57b7d30dc245eed6bb0bd7018336978a0110f1d73472956e0c682734834e83d8845c37f80f16
01af0e94d669d8ea0758ebd147eab95ac39c1130ba5990a2214562e094f41a010ab11c8377feff0a
ca3429cc0ddbd2ff4cd83ff195c00ffac22ce8b2817a4c7016d8dfd6364dbf0f40aebc2cf8612d77
4f29378487224058cf1df44bed6e9d68c2a68fa097228c4281f95533e3ba4825ece02982660f425c
11d1d41ec674e1bee79784de1c9c9e9f828758126e427406ed41172e64435b05d3566b566a78fa66
9ecacc03b89a8a83173c6faa4c78b6409b0ec05c0e6dca41591d266658cb12d5e9900ba7ff78945a
120291ca7d6052448b24913512a9f2c5ae28fe5993831e30813005be2d0cfc996b71ab6b
#END

#BEGIN DEVICE
	@LocalIOMaster, 12, 27
	@RamFS, 1, 1
	@UserLog, 7, 11
	@IntEthernet, 4, 2
	@DMLogger, 5, 10
	@IntModTCPClient, 9, 14, 1000, 2, 60
	@IntEIPClient, 22, 31, 1000, 2, 60
	@IntEthDMPPClient, 23, 32, 50, 250, 2
	@IntSerial, 10, 15
#END

#BEGIN MEM_CONFIG
	X	BIT	decimal	2048	-1
	Y	BIT	decimal	2048	-1
	WX	SWORD	decimal	256	-1
	WY	SWORD	decimal	256	-1
	C	BIT	decimal	2048
	V	UWORD	decimal	4096
	N	SWORD	decimal	4096
	D	SDWORD	decimal	4096
	R	REAL	decimal	4096
	T	TIMER	decimal	256
	CT	COUNTER	decimal	256
	SS	STRING	decimal	128
	SL	STRING	decimal	64
	UDT	DATETIME	decimal	32
	PL	UWORD	decimal	256
	DLX	BIT	octal	01000	-1
	DLY	BIT	octal	01000	-1
	DLC	BIT	octal	01000
	DLV	UWORD	octal	04000
	MI	BIT	decimal	1024
	MC	BIT	decimal	1024
	MIR	SWORD	decimal	2048
	MHR	SWORD	decimal	2048
	RX	REAL	decimal	256	-1
	RY	REAL	decimal	256	-1
	MSG	STRING		0
	ERR	STRING		0
	SysName	STRING		0
	SysDesc	STRING		0
	SerialNum	STRING		0
	PartNum	STRING		0
	Stacker	PROGRAM		0	-1
	StkerStartUp	TASK		0	-1
	StkerFaultCheck	TASK		0	-1
	StkerCycle	TASK		0	-1
	NewStker	PROGRAM		0	-1
	TestNewStker	PROGRAM		0	-1
	Stkr_SetState	<Virtual>		0
	Stkr_DetectState	<Virtual>		0
	stkr_CycleState	TASK		0	-1
	tst_mock_stkr	<Virtual>		0
	tst_stkrStart	TASK		0	-1
#END

// Beginning of Code Block Stkr_SetState
$LGCMOD	Stkr_SetState

// Rung Stkr_SetState#1
// Offset 0
#BEGIN FMT_COMMENT 
"#########################################<br> <br> <br>"
"Set Stacker States<br>"
"#########################################<br> <br>Set Rest "
"State"
#END

STRE	D3	0
SET	Y59
RST	Y58
RST	Y57
RST	Y56
RST	Y54

// Rung Stkr_SetState#2
// Offset 9
#BEGIN FMT_COMMENT 
"Set Ejection State"
#END

STRE	D3	1
SET	Y59
SET	Y58
RST	Y57
RST	Y56
RST	Y54

// Rung Stkr_SetState#3
// Offset 18
#BEGIN FMT_COMMENT 
"Set Compression State"
#END

STRE	D3	2
RST	Y59
SET	Y58
SET	Y57
RST	Y56
RST	Y54

// Rung Stkr_SetState#4
// Offset 27
#BEGIN FMT_COMMENT 
"Set Transfer State"
#END

STRE	D3	3
RST	Y59
SET	Y58
SET	Y57
SET	Y56
RST	Y54

// Rung Stkr_SetState#5
// Offset 36
#BEGIN FMT_COMMENT 
"Set Load State"
#END

STRE	D3	4
SET	Y59
RST	Y58
RST	Y57
SET	Y56
SET	Y54

// Rung Stkr_SetState#6
// Offset 45
NOP

// Rung Stkr_SetState#7
// Offset 46
NOP

// Rung Stkr_SetState#8
// Offset 47
RET

// End of Code Block Stkr_SetState
$LGCEND	Stkr_SetState

// Beginning of Code Block Stkr_DetectState
$LGCMOD	Stkr_DetectState

// Rung Stkr_DetectState#1
// Offset 0
#BEGIN FMT_COMMENT 
"##############################################################<br>"
" <br>#########################################<br>"
"##  Operational States #######################<br>"
"#########################################<br> <br>Detect "
"States<br>#########################################<br> <br>"
"Reset State"
#END

STR	ST1
MATH	D4	"-1"

// Rung Stkr_DetectState#2
// Offset 8
#BEGIN FMT_COMMENT 
" "
#END

STRN	X18
AND	X19
ANDN	X20
AND	X22
ANDN	X21
AND	X26
ANDN	X28
MATH	D4	"0"

// Rung Stkr_DetectState#3
// Offset 21
#BEGIN FMT_COMMENT 
"Ejection State"
#END

STR	X18
ANDN	X19
AND	X20
AND	X22
ANDN	X21
AND	X26
ANDN	X28
MATH	D4	"1"

// Rung Stkr_DetectState#4
// Offset 34
#BEGIN FMT_COMMENT 
"Compression State"
#END

STRN	X18
ANDN	X19
AND	X20
AND	X22
ANDN	X21
AND	X26
ANDN	X28
MATH	D4	"2"

// Rung Stkr_DetectState#5
// Offset 47
#BEGIN FMT_COMMENT 
"Transfer State"
#END

STRN	X18
ANDN	X19
AND	X20
ANDN	X22
AND	X21
AND	X26
ANDN	X28
MATH	D4	"3"

// Rung Stkr_DetectState#6
// Offset 60
#BEGIN FMT_COMMENT 
"Load State"
#END

STRN	X18
AND	X19
ANDN	X20
ANDN	X22
AND	X21
ANDN	X26
AND	X28
MATH	D4	"4"

// Rung Stkr_DetectState#7
// Offset 73
NOP

// Rung Stkr_DetectState#8
// Offset 74
RET

// End of Code Block Stkr_DetectState
$LGCEND	Stkr_DetectState

// Beginning of Code Block tst_mock_stkr
$LGCMOD	tst_mock_stkr

// Rung tst_mock_stkr#1
// Offset 0
#BEGIN FMT_COMMENT 
"##################################################<br>"
"##  MOCKS  #######################################<br>"
"##################################################<br> "
"<br>Mock Stacker Operation Pre-Run State"
#END

STRE	D50	0
RST	X18
SET	X19
RST	X20
SET	X22
RST	X21
SET	X26
RST	X28

// Rung tst_mock_stkr#2
// Offset 11
#BEGIN FMT_COMMENT 
"Mock Stacker Operation Ejection"
#END

STRE	D50	1
RST	X18
SET	X19
RST	X20
SET	X22
RST	X21
SET	X26
RST	X28

// Rung tst_mock_stkr#3
// Offset 22
#BEGIN FMT_COMMENT 
"Mock Stacker Operation Compression State"
#END

STRE	D50	2
RST	X18
SET	X19
RST	X20
SET	X22
RST	X21
SET	X26
RST	X28

// Rung tst_mock_stkr#4
// Offset 33
#BEGIN FMT_COMMENT 
"Mock Stacker Operation Transfer State"
#END

STRE	D50	3
RST	X18
SET	X19
RST	X20
SET	X22
RST	X21
SET	X26
RST	X28

// Rung tst_mock_stkr#5
// Offset 44
#BEGIN FMT_COMMENT 
"Mock Stacker Operation Load State"
#END

STRE	D50	4
RST	X18
SET	X19
RST	X20
SET	X22
RST	X21
SET	X26
RST	X28

// Rung tst_mock_stkr#6
// Offset 55
#BEGIN FMT_COMMENT 
"Mock Stacker Operation Broken State"
#END

STRE	D50	5
RST	X18
SET	X19
SET	X20
SET	X22
SET	X21
SET	X26
SET	X28

// Rung tst_mock_stkr#7
// Offset 66
NOP

// Rung tst_mock_stkr#8
// Offset 67
RET

// End of Code Block tst_mock_stkr
$LGCEND	tst_mock_stkr

// Beginning of Code Block $Main
$PRGRM	$Main

// Rung $Main#1
// Offset 0
STR	C200
RUN	Stacker
NOT
SUSPEND	Stacker

// Rung $Main#2
// Offset 5
STR	C201
DUPBOOL
ANDPDPF
RUN	NewStker
POPBOOL
NOT
SUSPEND	NewStker
OUT	C700

// Rung $Main#3
// Offset 14
STR	C203
DUPBOOL
ANDPDPF
RUN	TestNewStker
POPBOOL
NOT
HALT	TestNewStker

// Rung $Main#4
// Offset 22
NOP

// End of Code Block $Main
$PGMEND	$Main

// Beginning of Code Block Stacker
$PRGRM	Stacker

// Rung Stacker#1
// Offset 0
#BEGIN FMT_COMMENT 
"///////////////////////////////////////////////////<br>"
"// Globals<br>///////////////////////////////////////////////////"
#END

STR	ST1
OUT	C40

// Rung Stacker#2
// Offset 2
STR	ST1
OUT	C41

// Rung Stacker#3
// Offset 4
STR	ST1
OUT	C42

// Rung Stacker#4
// Offset 6
STR	ST1
OUT	C43

// Rung Stacker#5
// Offset 8
STR	ST1
OUT	C44

// Rung Stacker#6
// Offset 10
STR	C45
ENTASK	StkerFaultCheck	0x0	0	0x1
NOT
ANDPDPF
SUSPEND	StkerFaultCheck

// Rung Stacker#7
// Offset 18
STR	C46
ENTASK	StkerStartUp	0x0	0	0x1
NOT
SUSPEND	StkerStartUp

// Rung Stacker#8
// Offset 25
STR	C47
ENTASK	StkerCycle	0x0	0	0x1
NOT
SUSPEND	StkerCycle

// End of Code Block Stacker
$PGMEND	Stacker

// Beginning of Code Block StkerFaultCheck
$TSK	StkerFaultCheck

// Rung StkerFaultCheck#1
// Offset 0
#BEGIN FMT_COMMENT 
"Pre-run check<br>  "
#END

STR	X2
AND	X33
OUT	C0

// Rung StkerFaultCheck#2
// Offset 3
#BEGIN FMT_COMMENT 
"EnergizeStackerJamLight<br>    * Air pressure dips<br>"
"    * Guard door opens"
#END

STRN	C0
ORN	X3
OUT	Y1049

// Rung StkerFaultCheck#3
// Offset 6
#BEGIN FMT_COMMENT 
"Stacker Shutoff Grace Period<br>  - True when:<br>"
"    * Machine is running<br>"
"    * 6s after machin has stopped<br> "
#END

STR	X17
OFFDTMR	T0	6000	C1

// Rung StkerFaultCheck#4
// Offset 10
#BEGIN FMT_COMMENT 
"PassAllChecks<br>    - Air working<br>    - Door closed<br>"
"    - Within grace period<br> "
#END

STR	X3
AND	C0
AND	C1
OUT	C2

// Rung StkerFaultCheck#5
// Offset 14
#BEGIN FMT_COMMENT 
"Jam Timer Detect<br>"
"    - Detects dip in max air pressure<br>      * If air "
"stays at max all th etime it's not being exhausted.<br>"
"         Thus the stacker is jamed."
#END

STR	X3
OFFDTMR	T1	3000	C8

// Rung StkerFaultCheck#6
// Offset 18
#BEGIN FMT_COMMENT 
"Check if jams are detectable:<br>"
"    if: <br>        * In grace period<br>"
"    else if not in grace period<br>"
"        * Not reset pressed<br>        * Not Air has been "
"on for %3E than 3 sec<br>        * Air pressure on<br>"
"    then:<br>        * True"
#END

STRN	X9
ANDN	C8
AND	C0
OR	C1
OUT	C3

// End of Code Block StkerFaultCheck
$TSKEND	StkerFaultCheck

// Beginning of Code Block StkerStartUp
$TSK	StkerStartUp

// Rung StkerStartUp#1
// Offset 0
#BEGIN FMT_COMMENT 
"GraduallyBringUpAirPressure<br>"
"    %3E Holds air valve open till fault occurs.<br>"
"    - All faults ok references<br>"
"        * Guard door is closed<br>        * Air is on<br>"
"    - Air pressure OK refrences<br>"
"        * Air has not stayed at max for more than 3 sec.<br>"
"    - Press button will clear any fault exept:<br>"
"        * Guard door is closed<br>        * Air is on"
#END

STR	Y53
AND	X3
ANDN	C7
OR	X9
AND	C0
OUT	Y53

// Rung StkerStartUp#2
// Offset 6
#BEGIN FMT_COMMENT 
"TurnOnFullAir<br>"
"    # If air is up to pressure, open full air.<br>    - "
"Redundent fault checks.  Could not possibly have changed "
"state <br>"
"      since the last time they were set. <br>        * Air "
"pressure OK<br>        * All faults OK<br>"
"    - Valid Inputs<br>        * Gradual Start Valve"
#END

STR	X3
AND	Y53
AND	C0
OUT	Y61
OUT	Y62

// End of Code Block StkerStartUp
$TSKEND	StkerStartUp

// Beginning of Code Block StkerCycle
$TSK	StkerCycle

// Rung StkerCycle#1
// Offset 0
NOP

// Rung StkerCycle#2
// Offset 1
#BEGIN FMT_COMMENT 
"1. EnergizeVerticalBar<br>"
"/////////////////////////////////////////////////////////////<br>    "
"# Hold itself up till Eject out is tripped.<br>"
"    - Air Presso OK redundant check"
#END

STR	X19
OR	Y59
AND	X3
ANDN	X20
OUT	Y59

// Rung StkerCycle#3
// Offset 6
#BEGIN FMT_COMMENT 
"/////////////////////////////////////////////////////////////////////////<br>"
" <br>2. Stripper return<br>"
"/////////////////////////////////////////////////////////////////////////<br> "
""
#END

STR	C2
AND	Y58
ANDN	Y59
ANDN	X19
TMR	T20	500

// Rung StkerCycle#4
// Offset 12
#BEGIN FMT_COMMENT 
"/////////////////////////////////////////////////////////////////////////<br>"
" <br>3. Ejection Arm<br>"
"/////////////////////////////////////////////////////////////////////////<br>    "
"# Latch Start OS is the eye that reads one revolution of "
"the <br>"
"       gear which attaches the stacker to the main drive. <br>"
"    - This is the prime mover that triggers the whole "
"cycle<br> "
#END

STR	C2
ANDPD	X18
OR	Y58
AND	T20.Done
OUT	Y58

// Rung StkerCycle#5
// Offset 18
STR	X19
TMR	T21	65

// Rung StkerCycle#6
// Offset 21
#BEGIN FMT_COMMENT 
"/////////////////////////////////////////////////////////////////////////<br>"
" <br>4. "
"Compression<br>/////////////////////////////////////////////////////////////////////////"
#END

STRPD	T21.Done
OR	Y57
ANDN	T22.Done
OUT	Y57
TMR	T22	0

// Rung StkerCycle#7
// Offset 28
#BEGIN FMT_COMMENT 
"/////////////////////////////////////////////////////////////////////////<br>"
" <br>5. "
"Transfer<br>/////////////////////////////////////////////////////////////////////////"
#END

STR	Y57
TMR	T23	9000

// Rung StkerCycle#8
// Offset 31
STRPD	T23.Done
OR	T24.Timing
TMR	T24	1000

// Rung StkerCycle#9
// Offset 36
#BEGIN FMT_COMMENT 
"/////////////////////////////////////////////////////////////////////////<br>"
" <br>6. "
"Load<br>/////////////////////////////////////////////////////////////////////////"
#END

STR	T24.Timing
OUT	Y56

// Rung StkerCycle#10
// Offset 38
STR	C42
OR	Y54
OUT	C20

// Rung StkerCycle#11
// Offset 41
STR	C43
AND	C20
ANDPDPF
OR	C21
AND	C40
AND	C0
AND	C22
OUT	C21

// Rung StkerCycle#12
// Offset 49
STRN	X27
ANDN	C41
ORN	C44
AND	C20
OUT	C22

// Rung StkerCycle#13
// Offset 54
STR	C21
AND	C20
ANDN	C22
OUT	Y54

// Rung StkerCycle#14
// Offset 58
#BEGIN FMT_COMMENT 
""
"/////////////////////////////////////////////////////////////////////////<br>"
" <br> <br>/////////////////////////////////////////////////////////////////////////"
#END

STR	C42
PD	C4

// Rung StkerCycle#15
// Offset 61
STR	Y56
OR	C5
ANDN	C43
AND	C3
ANDN	C4
OUT	C5
TMR	T2	1000

// Rung StkerCycle#16
// Offset 69
STRN	Y56
OR	C6
ANDN	X22
AND	C3
OUT	C6
TMR	T3	2000

// Rung StkerCycle#17
// Offset 76
STR	Y54
AND	C22
AND	C3
TMR	T4	2000

// Rung StkerCycle#18
// Offset 81
STRN	Y54
ANDN	X26
AND	C3
TMR	T5	1000

// Rung StkerCycle#19
// Offset 86
STR	T2.Done
OR	T3.Done
STR	T5.Done
ANDN	X29
ORSTR
STR	T4.Done
ANDN	X29
ORSTR
OUT	C7

// Rung StkerCycle#20
// Offset 95
STR	C7
OR	Y51
ANDN	X9
OUT	Y51

// Rung StkerCycle#21
// Offset 99
STR	T5.Done
OUT	Y68

// Rung StkerCycle#22
// Offset 101
STR	T4.Done
OUT	Y67

// Rung StkerCycle#23
// Offset 103
STR	T3.Done
OUT	Y66

// Rung StkerCycle#24
// Offset 105
STR	T2.Done
OUT	Y65

// Rung StkerCycle#25
// Offset 107
NOP

// End of Code Block StkerCycle
$TSKEND	StkerCycle

// Beginning of Code Block NewStker
$PRGRM	NewStker

// Rung NewStker#1
// Offset 0
#BEGIN FMT_COMMENT 
""
"#########################################<br>"
"##  RUN STATES  ##########################<br>#########################################"
#END

NOP

// Rung NewStker#2
// Offset 1
#BEGIN FMT_COMMENT 
"Shut Off Grace Period<br> "
#END

STR	X17
OFFDTMR	T102	6000	C319

// Rung NewStker#3
// Offset 5
STR	X9
TIMEDOUT	500	C9	0x1

// Rung NewStker#4
// Offset 10
#BEGIN FMT_COMMENT 
"Machine Pre-Run Error"
#END

STRN	X33
ORN	X2
ORN	X3
STR	Y49
ANDN	C9
ORSTR
OUT	C303
OUT	Y49

// Rung NewStker#5
// Offset 18
#BEGIN FMT_COMMENT 
"Machine Pre-Run Error"
#END

STR	C376
OR	C377
STR	Y51
STRN	C9
ORNE	D4	0
ANDSTR
ORSTR
OUT	C304
OUT	Y51

// Rung NewStker#6
// Offset 30
NOP

// Rung NewStker#7
// Offset 31
#BEGIN FMT_COMMENT 
"Machine On State"
#END

STRN	C303
ANDN	C304
AND	C319
ANDN	C9
OUT	C301
OUT	Y62

// Rung NewStker#8
// Offset 37
#BEGIN FMT_COMMENT 
"#########################################<br> <br> <br>"
"Set States<br>#########################################<br>"
" <br>Detect State"
#END

STR	ST1
CALL	Stkr_DetectState	0x1	DST511	"3"	"3"

// Rung NewStker#9
// Offset 45
STR	C400
AND	C301
AND	ST2
ENTASK	stkr_CycleState	0x0	0	0x1

// End of Code Block NewStker
$PGMEND	NewStker

// Beginning of Code Block stkr_CycleState
$TSK	stkr_CycleState

// Rung stkr_CycleState#1
// Offset 0
#BEGIN FMT_COMMENT 
"##############################################################<br>"
" <br>#########################################<br>"
"##  Transition States #########################<br>"
"#########################################<br> <br>Cycle "
"States<br>#########################################"
#END

STRPD	X18
SET	C355

// Rung stkr_CycleState#2
// Offset 3
#BEGIN FMT_COMMENT 
" "
#END

STRNE	D4	-1
ANDN	T100.Timing
AND	C301
OUT	C318

// Rung stkr_CycleState#3
// Offset 10
STR	C318
DUPBOOL
ANDNE	D5	4
MATH	D5	"D4 + 1"
POPBOOL
ANDE	D5	4
MATH	D5	"0"

// Rung stkr_CycleState#4
// Offset 35
#BEGIN FMT_COMMENT 
"Get Transition Timeout and Lockout"
#END

STR	C318
DUPBOOL
ANDE	D5	0
AND	X18
RST	C355
MATH	D0	"1000"
MATH	D1	"2000"
POPBOOL
DUPBOOL
ANDE	D5	1
MATH	D0	"1000"
MATH	D1	"2000"
POPBOOL
DUPBOOL
ANDE	D5	2
MATH	D0	"1000"
MATH	D1	"2000"
POPBOOL
DUPBOOL
ANDE	D5	3
MATH	D0	"1000"
MATH	D1	"2000"
POPBOOL
ANDE	D5	4
MATH	D0	"1000"
MATH	D1	"2000"

// Rung stkr_CycleState#5
// Offset 126
#BEGIN FMT_COMMENT 
"Set New State"
#END

STR	C318
CALL	Stkr_SetState	0x1	DST511	"3 D5 D3 1"	"3"

// Rung stkr_CycleState#6
// Offset 136
#BEGIN FMT_COMMENT 
"Start lockout for state transition<br>"
"    * The state cannot transition again during this time"
#END

STR	ST1
STR	C318
TMRA	T100	D0

// Rung stkr_CycleState#7
// Offset 140
#BEGIN FMT_COMMENT 
"##############################################################<br>"
" <br>#########################################<br>"
"##  Error Trapping ###########################<br>"
"#########################################<br> <br>Test for "
"timeout on state transition<br>"
"#########################################<br>    * If the "
"machine takes too long between transitions it is <br>      "
"considered in a broken state<br> "
#END

STR	ST1
STR	C318
TMRA	T101	D1

// Rung stkr_CycleState#8
// Offset 144
STR	T101.Done
OUT	C376

// Rung stkr_CycleState#9
// Offset 146
#BEGIN FMT_COMMENT 
"#########################################<br> <br>"
"Mised Latch Cam Cycle "
"Error<br>#########################################"
#END

STR	C355
OUT	C377

// Rung stkr_CycleState#10
// Offset 148
#BEGIN FMT_COMMENT 
"#########################################<br> <br> <br>#########################################"
#END

NOP

// Rung stkr_CycleState#11
// Offset 149
NOP

// End of Code Block stkr_CycleState
$TSKEND	stkr_CycleState

// Beginning of Code Block TestNewStker
$PRGRM	TestNewStker

// Rung TestNewStker#1
// Offset 0
STRPD	ST1
RSTR	C400	C449
RSTR	C600	C649

// Rung TestNewStker#2
// Offset 6
#BEGIN FMT_COMMENT 
"##################################################<br>"
"## Tests  ##########################################<br>"
"##################################################<br> "
"<br>Test On State"
#END

NOP

// Rung TestNewStker#3
// Offset 7
STR	C408
ENTASK	tst_stkrStart	0x0	0	0x1
NOT
HALT	tst_stkrStart

// Rung TestNewStker#4
// Offset 14
STR	C301
RST	C408

// Rung TestNewStker#5
// Offset 16
#BEGIN FMT_COMMENT 
"Test Stacker Start<br>#################################################"
#END

STRPD	ST1
ANDN	C600
CALL	tst_mock_stkr	0x1	DST511	"3 0 D50 1"	"3"

// Rung TestNewStker#6
// Offset 28
#BEGIN FMT_COMMENT 
" "
#END

STRPD	ST1
ANDN	C600
SET	C408

// Rung TestNewStker#7
// Offset 32
STR	C301
SET	C600

// Rung TestNewStker#8
// Offset 34
#BEGIN FMT_COMMENT 
"#################################################<br> <br>"
"Test Stacker Pre-Run "
"Error<br>#################################################"
#END

STR	C600
ANDN	C601
AND	C409
SET	C408

// Rung TestNewStker#9
// Offset 38
#BEGIN FMT_COMMENT 
" "
#END

STR	C600
ANDN	C601
ANDN	C409
RST	X2
SET	C409

// Rung TestNewStker#10
// Offset 43
#BEGIN FMT_COMMENT 
" "
#END

STR	C600
ANDN	C601
AND	X2
AND	C409
AND	C301
SET	C601
RST	C409

// Rung TestNewStker#11
// Offset 50
#BEGIN FMT_COMMENT 
"#################################################<br> <br>"
"Test Stacker Run-Time "
"Error<br>#################################################"
#END

STR	C601
ANDN	C602
AND	C409
RST	C377
ANDN	C377
SET	C408
TMR	T200	1000

// Rung TestNewStker#12
// Offset 58
STR	C601
ANDN	C602
DUPBOOL
ANDPDPF
ANDNE	D50	3
CALL	tst_mock_stkr	0x1	DST511	"3 3 D50 1"	"3"
POPBOOL
ANDE	D50	3
SET	C377
SET	C409

// Rung TestNewStker#13
// Offset 82
STR	C601
ANDN	C602
AND	T200.Done
ANDN	C301
SET	C410

// Rung TestNewStker#14
// Offset 87
STR	C601
ANDN	C602
AND	C410
ANDE	D50	0
SET	C408

// Rung TestNewStker#15
// Offset 95
STR	C601
ANDN	C602
AND	C410
ANDNE	D50	0
CALL	tst_mock_stkr	0x1	DST511	"3 0 D50 1"	"3"
RST	C408

// Rung TestNewStker#16
// Offset 112
STR	C601
ANDN	C602
ANDN	C377
AND	C410
AND	C301
SET	C602
RSTR	C409	C410

// Rung TestNewStker#17
// Offset 120
#BEGIN FMT_COMMENT 
" ################################################# <br> "
"<br> <br> <br>"
" ################################################# <br>"
"Detect States Test<br>"
"#################################################<br> <br> "
#END

STR	C602
ANDN	C603
DUPBOOL
ANDN	C409
CALL	tst_mock_stkr	0x1	DST511	"3 0 D50 1"	"3"
POPBOOL
DUPBOOL
AND	C409
ANDN	C410
CALL	tst_mock_stkr	0x1	DST511	"3 1 D50 1"	"3"
POPBOOL
DUPBOOL
AND	C410
ANDN	C411
CALL	tst_mock_stkr	0x1	DST511	"3 2 D50 1"	"3"
POPBOOL
DUPBOOL
AND	C411
ANDN	C412
CALL	tst_mock_stkr	0x1	DST511	"3 3 D50 1"	"3"
POPBOOL
DUPBOOL
AND	C412
ANDN	C413
CALL	tst_mock_stkr	0x1	DST511	"3 4 D50 1"	"3"
POPBOOL
AND	C413
ANDN	C414
CALL	tst_mock_stkr	0x1	DST511	"3 5 D50 1"	"3"

// Rung TestNewStker#18
// Offset 197
STR	C602
ANDN	C603
ANDE	D50	D4
DUPBOOL
ANDN	C409
SET	C409
POPBOOL
DUPBOOL
AND	C409
ANDN	C410
SET	C410
POPBOOL
DUPBOOL
AND	C410
ANDN	C411
SET	C411
POPBOOL
DUPBOOL
AND	C411
ANDN	C412
SET	C412
POPBOOL
DUPBOOL
AND	C412
ANDN	C413
SET	C413
POPBOOL
AND	C413
ANDN	C414
SET	C414

// Rung TestNewStker#19
// Offset 230
STR	C602
ANDN	C603
AND	C409
AND	C410
AND	C411
AND	C412
AND	C413
AND	C414
SET	C603
RSTR	C409	C414

// Rung TestNewStker#20
// Offset 241
NOP

// Rung TestNewStker#21
// Offset 242
#BEGIN FMT_COMMENT 
" ################################################# <br> "
"<br> <br> <br>"
" ################################################# <br>"
"Set States Test<br>"
"#################################################<br> <br> "
#END

STR	C603
ANDN	C604
DUPBOOL
ANDN	C409
CALL	Stkr_SetState	0x0	DST511	"3 0 D3 1"	"3"
POPBOOL
DUPBOOL
AND	C409
ANDN	C410
CALL	Stkr_SetState	0x0	DST511	"3 1 D3 1"	"3"
POPBOOL
DUPBOOL
AND	C410
ANDN	C411
CALL	Stkr_SetState	0x0	DST511	"3 2 D3 1"	"3"
POPBOOL
DUPBOOL
AND	C411
ANDN	C412
CALL	Stkr_SetState	0x0	DST511	"3 3 D3 1"	"3"
POPBOOL
AND	C412
ANDN	C413
CALL	Stkr_SetState	0x0	DST511	"3 4 D3 1"	"3"

// Rung TestNewStker#22
// Offset 311
STR	C603
ANDN	C604
DUPBOOL
ANDN	C409
AND	Y59
ANDN	Y58
ANDN	Y57
ANDN	Y56
ANDN	Y54
SET	C409
POPBOOL
DUPBOOL
AND	C409
ANDN	C410
AND	Y59
AND	Y58
ANDN	Y57
ANDN	Y56
ANDN	Y54
SET	C410
POPBOOL
DUPBOOL
AND	C410
ANDN	C411
ANDN	Y59
AND	Y58
AND	Y57
ANDN	Y56
ANDN	Y54
SET	C411
POPBOOL
DUPBOOL
AND	C411
ANDN	C412
ANDN	Y59
AND	Y58
AND	Y57
AND	Y56
ANDN	Y54
SET	C412
POPBOOL
AND	C412
ANDN	C413
AND	Y59
ANDN	Y58
ANDN	Y57
AND	Y56
AND	Y54
SET	C413

// Rung TestNewStker#23
// Offset 360
STR	C603
ANDN	C604
AND	C409
AND	C410
AND	C411
AND	C412
AND	C413
SET	C604
RSTR	C409	C413

// Rung TestNewStker#24
// Offset 370
#BEGIN FMT_COMMENT 
" ################################################# <br> "
"<br> <br> <br>"
" ################################################# <br>"
"Cycle State<br>"
"#################################################<br> <br> "
#END

NOP

// End of Code Block TestNewStker
$PGMEND	TestNewStker

// Beginning of Code Block tst_stkrStart
$TSK	tst_stkrStart

// Rung tst_stkrStart#1
// Offset 0
STR	C407
RST	X9

// Rung tst_stkrStart#2
// Offset 2
#BEGIN FMT_COMMENT 
"Turn On Stacker"
#END

STRPD	ST1
SET	X2
SET	X33
SET	X3
SET	X9
OUT	C407
SET	X17

// Rung tst_stkrStart#3
// Offset 10
NOP

// End of Code Block tst_stkrStart
$TSKEND	tst_stkrStart

#BEGIN ELEMENT_DOC
"X2","","","Air SW on Stacker"
"X3","","","Air Pressure OK"
"X9","","","Stacker Reset PB"
"X17","","","Machine Run Started"
"X18","","","Latch Cam Start Cycle"
"X19","","","Eject In"
"X20","","","Eject Out"
"X21","","","Transfer Operator Side"
"X22","","","Transfer Drive Side"
"X26","","","Operator Side Load In"
"X27","","","Operator Side Load Half"
"X28","","","Operator Side Load Out"
"X29","s","","Product Entering"
"X33","","","Guard Door SW"
"Y49","","","Stacker Jam Light"
"Y51","","","Timing Fault Light"
"Y53","","","Gradual Start Valve"
"Y54","","","Operator Side Load Sol"
"Y56","","","Transfer Sol"
"Y57","","","Compression Sol"
"Y58","","","Ejection Sol"
"Y59","","","Vertical Bar Sol"
"Y61","","","Full Air Valve"
"Y62","","","Machine Stop Interlock"
"Y65","","","Transfer Left Timing Fault"
"Y66","","","Transfer Right Timing Fault"
"Y67","","","Operator Side Load Out Timing Fault"
"Y68","","","Operator Side Load In Timing Fault"
"C0","","","All Faults OK"
"C1","","","Stacker Run OK"
"C2","","","Stacker Enable"
"C3","","","Jam Detect Enable"
"C4","","","Operator Side OS"
"C5","","","State Bit"
"C6","","","State Bit"
"C7","","","Any Timing Fault"
"C8","","","Alarm For Excess Time at Max Air Pressure"
"C9","","","Stacker Reset Press"
"C20","","","Operator Side Load Enable"
"C21","","","Operator Side Load Single Stack"
"C22","","","Operator Side Mode"
"C40","","","Single Stack Mode Constant"
"C41","","","No Interupt Stroke Mode Constant"
"C42","","","Operator Side Loading Mode Constant"
"C43","","","4 To 5/6 Stacker Adjust for Operator Load Constant"
"C44","","","4 To 5/6 Stacker Adjust For Operator Load"
"C45","","","Run Stacker Check Faults Task"
"C46","","","Run Stacker Start Up Task"
"C47","","","Run Stacker Cycle Task"
"C200","","","Run Stacker Program"
"C301","","","Stacker Run State"
"C302","","","Stacker Off State"
"C303","","","Stacker Pre Run Error State"
"C304","","","Stacker Run Time Error State"
"C310","","","Stacker Operation Reset State Detected"
"C311","","","Stacker Operation Ejection State Detected"
"C312","","","Stacker Operation Compression State Detected"
"C313","","","Stacker Operation Transfer State Detected"
"C314","","","Stacker Operation Load State Detected"
"C315","","","Stacker Operation Error State Detected"
"C316","","","Stacker Operation Enum Advance"
"C317","","","Stacker Operation Enum Reset"
"C318","","","Transition State"
"C319","","","Machine Run Started + Grace Period"
"C350","","","Set Stacker Operation Reset Sate"
"C351","","","Set Stacker Operation Ejection State"
"C352","","","Set Stacker Operation Compression State"
"C353","","","Set Stacker Operation Transfer State"
"C354","","","Set Stacker Operation Load State"
"C355","","","Latch Cycle Open"
"C375","","","Stacker Operation Broken State Error"
"C376","","","Stacker Operation Transition State Timeout Error"
"C377","","","Stacker Operation Missed Cam Latch Cycle Error"
"C400","","","Mock Stacker Operation Pre-Run State"
"C401","","","Mock Stacker Operation Reset State"
"C402","","","Mock Stacker Operation Ejection State"
"C403","","","Mock Stacker Operation Compression State"
"C404","","","Mock Stacker Operation Transfer State"
"C405","","","Mock Stacker Operation Load State"
"C406","","","Mock Stacker Operation Error State"
"C407","","","Mock Turn On Stacker"
"C408","","","Mock Restart Stacker"
"C450","","","Test Prerun Error"
"C451","","","Test Turn Off Stacker"
"C500","","","Test Stacker Turn On Success"
"C600","","","Passed Stacker On Test"
"C601","","","Passed Stacker Pre- Run Error Test"
"C602","","","Passed Stacker Runtime Error Test"
"C603","","","Passed Stacker Detect State Test"
"C604","","","Passed Stacker Set State"
"D0","","","Stacker Operation Transition Lock Out ms"
"D1","","","Stacker Opertation Transition Time Out ms"
"D2","","","Sum Active Stacker Operational States"
"D3","","","Stacker Operation Next State"
"D4","","","Stacker Operation Detected State"
"D5","","","Private Machine State"
"D50","","","Stacker Operation Mock State"
"T0","GracePeriodTMR","","Stacker Shutdown Grace Period Timer"
"T1","AirMaxPressTMR","","Alarm for Excess Time at Max Air Pressure"
"T2","OSTransferStrTMR","","Operator Side Transfer Stroke Timer"
"T3","DSTransferTMR","","Drive Side Transfer Stroke Timer"
"T4","OSLoadOutTMR","","Operator Side Load Out Timer"
"T5","OSLoadInTMR","","Operator Side Load In Timer"
"T20","StripperReturTMR","","Stripper Return Timer"
"T21","EjectInTMR","","Eject Arm In Timer"
"T22","CompressDwellTMR","","Compression Dwell Timer"
"T23","TransferEnablTMR","","Transfer Enable Timer"
"T24","TransferDwellTMR","","Operator Side Transfer Dwell Timer"
"CT0","StateEnum","","Stacker Operation State Enum Counter"
"US0","_tst_sreRunE_A","","tst_stkr_PreRunE"
"US1","_tst_stkr_TurnOn","","tst_stkr_TurnOn"
#END

